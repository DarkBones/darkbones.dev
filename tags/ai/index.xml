<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI on DarkBones</title><link>https://darkbones.dev/tags/ai/</link><description>Recent content in AI on DarkBones</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 25 Feb 2025 16:55:55 +0100</lastBuildDate><atom:link href="https://darkbones.dev/tags/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>RAG, But I Made it Smarter</title><link>https://darkbones.dev/posts/rag-but-i-made-it-smarter/</link><pubDate>Tue, 25 Feb 2025 16:55:55 +0100</pubDate><guid>https://darkbones.dev/posts/rag-but-i-made-it-smarter/</guid><description>&lt;p>&lt;strong>If you&amp;rsquo;re just here for the setup, you can &lt;a href="#setting-it-all-up">skip to the tutorial&lt;/a>. If you&amp;rsquo;re not familiar with RAG, you might want to check out &lt;a href="https://darkbones.dev/posts/explaining-rag/">my previous article&lt;/a> first.&lt;/strong>&lt;/p>
&lt;p>Retrieval-Augmented Generation (RAG) is great—until it isn’t. While it helps LLMs pull in external knowledge, it comes with its own headaches. If you&amp;rsquo;ve ever had a RAG system return irrelevant information, mash together unrelated concepts, or confidently misinterpret first-person writing, you&amp;rsquo;ve run into these issues.&lt;/p></description></item><item><title>Beyond Training Data: How RAG Lets LLMs Retrieve, Not Guess</title><link>https://darkbones.dev/posts/explaining-rag/</link><pubDate>Sun, 23 Feb 2025 12:34:51 +0100</pubDate><guid>https://darkbones.dev/posts/explaining-rag/</guid><description>&lt;p>&lt;img src="cover-image.png" alt="Retrieval-Augmented Generation">&lt;/p>
&lt;p>&lt;strong>Large Language Models (LLMs) like GPT-4 don’t actually &amp;lsquo;know&amp;rsquo; anything—they predict words based on old training data. Retrieval-Augmented Generation (RAG) changes that by letting AI pull in fresh, real-world knowledge before answering.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>RAG enhances LLMs by enabling them to retrieve relevant information from external sources before generating a response. Because LLMs rely on static training data and don’t update automatically, RAG gives them access to fresh, domain-specific, or private knowledge without the need for costly retraining.&lt;/strong>&lt;/p></description></item></channel></rss>